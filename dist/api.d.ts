/**
 * ASP.NETCore_suvlo
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * Contact: gkjuszczyk@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { Configuration } from './configuration';
import { AxiosPromise, AxiosInstance } from 'axios';
import { RequestArgs, BaseAPI } from './base';
/**
 *
 * @export
 * @interface MicrosoftAspNetCoreMvcProblemDetails
 */
export interface MicrosoftAspNetCoreMvcProblemDetails {
    [key: string]: any | any;
    /**
     *
     * @type {string}
     * @memberof MicrosoftAspNetCoreMvcProblemDetails
     */
    type?: string | null;
    /**
     *
     * @type {string}
     * @memberof MicrosoftAspNetCoreMvcProblemDetails
     */
    title?: string | null;
    /**
     *
     * @type {number}
     * @memberof MicrosoftAspNetCoreMvcProblemDetails
     */
    status?: number | null;
    /**
     *
     * @type {string}
     * @memberof MicrosoftAspNetCoreMvcProblemDetails
     */
    detail?: string | null;
    /**
     *
     * @type {string}
     * @memberof MicrosoftAspNetCoreMvcProblemDetails
     */
    instance?: string | null;
}
/**
 *
 * @export
 * @interface VLOBOARDSAreasAuthConfirmEmailInputModel
 */
export interface VLOBOARDSAreasAuthConfirmEmailInputModel {
    /**
     *
     * @type {string}
     * @memberof VLOBOARDSAreasAuthConfirmEmailInputModel
     */
    userId?: string | null;
    /**
     *
     * @type {string}
     * @memberof VLOBOARDSAreasAuthConfirmEmailInputModel
     */
    code?: string | null;
}
/**
 *
 * @export
 * @interface VLOBOARDSAreasAuthExternalLoginRegisterInputModel
 */
export interface VLOBOARDSAreasAuthExternalLoginRegisterInputModel {
    /**
     *
     * @type {string}
     * @memberof VLOBOARDSAreasAuthExternalLoginRegisterInputModel
     */
    email: string;
    /**
     *
     * @type {string}
     * @memberof VLOBOARDSAreasAuthExternalLoginRegisterInputModel
     */
    username: string;
}
/**
 *
 * @export
 * @interface VLOBOARDSAreasAuthForgotPasswordInputModel
 */
export interface VLOBOARDSAreasAuthForgotPasswordInputModel {
    /**
     *
     * @type {string}
     * @memberof VLOBOARDSAreasAuthForgotPasswordInputModel
     */
    email: string;
}
/**
 *
 * @export
 * @interface VLOBOARDSAreasAuthLogin2FAInputModel
 */
export interface VLOBOARDSAreasAuthLogin2FAInputModel {
    /**
     *
     * @type {string}
     * @memberof VLOBOARDSAreasAuthLogin2FAInputModel
     */
    twoFactorCode: string;
    /**
     *
     * @type {boolean}
     * @memberof VLOBOARDSAreasAuthLogin2FAInputModel
     */
    rememberMachine?: boolean;
    /**
     *
     * @type {boolean}
     * @memberof VLOBOARDSAreasAuthLogin2FAInputModel
     */
    rememberMe?: boolean;
}
/**
 *
 * @export
 * @interface VLOBOARDSAreasAuthLoginInputModel
 */
export interface VLOBOARDSAreasAuthLoginInputModel {
    /**
     *
     * @type {string}
     * @memberof VLOBOARDSAreasAuthLoginInputModel
     */
    username: string;
    /**
     *
     * @type {string}
     * @memberof VLOBOARDSAreasAuthLoginInputModel
     */
    password: string;
    /**
     *
     * @type {boolean}
     * @memberof VLOBOARDSAreasAuthLoginInputModel
     */
    rememberMe: boolean;
    /**
     *
     * @type {string}
     * @memberof VLOBOARDSAreasAuthLoginInputModel
     */
    captchaResponse: string;
}
/**
 *
 * @export
 * @interface VLOBOARDSAreasAuthLoginResult
 */
export interface VLOBOARDSAreasAuthLoginResult {
    /**
     *
     * @type {string}
     * @memberof VLOBOARDSAreasAuthLoginResult
     */
    message?: string | null;
    /**
     *
     * @type {boolean}
     * @memberof VLOBOARDSAreasAuthLoginResult
     */
    redirect?: boolean;
    /**
     *
     * @type {string}
     * @memberof VLOBOARDSAreasAuthLoginResult
     */
    returnUrl?: string | null;
}
/**
 *
 * @export
 * @interface VLOBOARDSAreasAuthLoginWithRecoveryCodeInputModel
 */
export interface VLOBOARDSAreasAuthLoginWithRecoveryCodeInputModel {
    /**
     *
     * @type {string}
     * @memberof VLOBOARDSAreasAuthLoginWithRecoveryCodeInputModel
     */
    recoveryCode: string;
}
/**
 *
 * @export
 * @interface VLOBOARDSAreasAuthLoginWithRecoveryCodeResult
 */
export interface VLOBOARDSAreasAuthLoginWithRecoveryCodeResult {
    /**
     *
     * @type {string}
     * @memberof VLOBOARDSAreasAuthLoginWithRecoveryCodeResult
     */
    message?: string | null;
    /**
     *
     * @type {boolean}
     * @memberof VLOBOARDSAreasAuthLoginWithRecoveryCodeResult
     */
    redirect?: boolean;
    /**
     *
     * @type {string}
     * @memberof VLOBOARDSAreasAuthLoginWithRecoveryCodeResult
     */
    returnUrl?: string | null;
}
/**
 *
 * @export
 * @interface VLOBOARDSAreasAuthLogoutResult
 */
export interface VLOBOARDSAreasAuthLogoutResult {
    /**
     *
     * @type {string}
     * @memberof VLOBOARDSAreasAuthLogoutResult
     */
    message?: string | null;
    /**
     *
     * @type {boolean}
     * @memberof VLOBOARDSAreasAuthLogoutResult
     */
    redirect?: boolean;
    /**
     *
     * @type {string}
     * @memberof VLOBOARDSAreasAuthLogoutResult
     */
    returnUrl?: string | null;
}
/**
 *
 * @export
 * @interface VLOBOARDSAreasAuthRegisterInputModel
 */
export interface VLOBOARDSAreasAuthRegisterInputModel {
    /**
     *
     * @type {string}
     * @memberof VLOBOARDSAreasAuthRegisterInputModel
     */
    email: string;
    /**
     *
     * @type {string}
     * @memberof VLOBOARDSAreasAuthRegisterInputModel
     */
    password: string;
    /**
     *
     * @type {string}
     * @memberof VLOBOARDSAreasAuthRegisterInputModel
     */
    username: string;
    /**
     *
     * @type {string}
     * @memberof VLOBOARDSAreasAuthRegisterInputModel
     */
    captchaResponse: string;
}
/**
 *
 * @export
 * @interface VLOBOARDSAreasAuthRegistrationResult
 */
export interface VLOBOARDSAreasAuthRegistrationResult {
    /**
     *
     * @type {string}
     * @memberof VLOBOARDSAreasAuthRegistrationResult
     */
    message?: string | null;
}
/**
 *
 * @export
 * @interface VLOBOARDSAreasAuthResendEmailConfirmationInputModel
 */
export interface VLOBOARDSAreasAuthResendEmailConfirmationInputModel {
    /**
     *
     * @type {string}
     * @memberof VLOBOARDSAreasAuthResendEmailConfirmationInputModel
     */
    email: string;
}
/**
 *
 * @export
 * @interface VLOBOARDSAreasAuthResetPasswordInputModel
 */
export interface VLOBOARDSAreasAuthResetPasswordInputModel {
    /**
     *
     * @type {string}
     * @memberof VLOBOARDSAreasAuthResetPasswordInputModel
     */
    email: string;
    /**
     *
     * @type {string}
     * @memberof VLOBOARDSAreasAuthResetPasswordInputModel
     */
    password: string;
    /**
     *
     * @type {string}
     * @memberof VLOBOARDSAreasAuthResetPasswordInputModel
     */
    confirmPassword?: string | null;
    /**
     *
     * @type {string}
     * @memberof VLOBOARDSAreasAuthResetPasswordInputModel
     */
    code: string;
    /**
     *
     * @type {string}
     * @memberof VLOBOARDSAreasAuthResetPasswordInputModel
     */
    captchaResponse: string;
}
/**
 *
 * @export
 * @interface VLOBOARDSAreasAuthReturnUrlInfo
 */
export interface VLOBOARDSAreasAuthReturnUrlInfo {
    /**
     *
     * @type {string}
     * @memberof VLOBOARDSAreasAuthReturnUrlInfo
     */
    safeReturnUrl?: string | null;
    /**
     *
     * @type {boolean}
     * @memberof VLOBOARDSAreasAuthReturnUrlInfo
     */
    validReturnUrl?: boolean;
    /**
     *
     * @type {boolean}
     * @memberof VLOBOARDSAreasAuthReturnUrlInfo
     */
    clientInfo?: boolean;
    /**
     *
     * @type {string}
     * @memberof VLOBOARDSAreasAuthReturnUrlInfo
     */
    clientName?: string | null;
    /**
     *
     * @type {string}
     * @memberof VLOBOARDSAreasAuthReturnUrlInfo
     */
    clientUri?: string | null;
    /**
     *
     * @type {string}
     * @memberof VLOBOARDSAreasAuthReturnUrlInfo
     */
    clientLogoUrl?: string | null;
}
/**
 *
 * @export
 * @interface VLOBOARDSAreasAuthReturnUrlInfoInputModel
 */
export interface VLOBOARDSAreasAuthReturnUrlInfoInputModel {
    /**
     *
     * @type {string}
     * @memberof VLOBOARDSAreasAuthReturnUrlInfoInputModel
     */
    returnUrl: string;
}
/**
 * ConfirmEmailApi - axios parameter creator
 * @export
 */
export declare const ConfirmEmailApiAxiosParamCreator: (configuration?: Configuration | undefined) => {
    /**
     *
     * @summary Confirms email using provided userid and code
     * @param {VLOBOARDSAreasAuthConfirmEmailInputModel} [vLOBOARDSAreasAuthConfirmEmailInputModel]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiAuthConfirmEmailPost: (vLOBOARDSAreasAuthConfirmEmailInputModel?: VLOBOARDSAreasAuthConfirmEmailInputModel | undefined, options?: any) => Promise<RequestArgs>;
};
/**
 * ConfirmEmailApi - functional programming interface
 * @export
 */
export declare const ConfirmEmailApiFp: (configuration?: Configuration | undefined) => {
    /**
     *
     * @summary Confirms email using provided userid and code
     * @param {VLOBOARDSAreasAuthConfirmEmailInputModel} [vLOBOARDSAreasAuthConfirmEmailInputModel]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiAuthConfirmEmailPost(vLOBOARDSAreasAuthConfirmEmailInputModel?: VLOBOARDSAreasAuthConfirmEmailInputModel | undefined, options?: any): Promise<(axios?: AxiosInstance | undefined, basePath?: string | undefined) => AxiosPromise<void>>;
};
/**
 * ConfirmEmailApi - factory interface
 * @export
 */
export declare const ConfirmEmailApiFactory: (configuration?: Configuration | undefined, basePath?: string | undefined, axios?: AxiosInstance | undefined) => {
    /**
     *
     * @summary Confirms email using provided userid and code
     * @param {VLOBOARDSAreasAuthConfirmEmailInputModel} [vLOBOARDSAreasAuthConfirmEmailInputModel]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiAuthConfirmEmailPost(vLOBOARDSAreasAuthConfirmEmailInputModel?: VLOBOARDSAreasAuthConfirmEmailInputModel | undefined, options?: any): AxiosPromise<void>;
};
/**
 * ConfirmEmailApi - object-oriented interface
 * @export
 * @class ConfirmEmailApi
 * @extends {BaseAPI}
 */
export declare class ConfirmEmailApi extends BaseAPI {
    /**
     *
     * @summary Confirms email using provided userid and code
     * @param {VLOBOARDSAreasAuthConfirmEmailInputModel} [vLOBOARDSAreasAuthConfirmEmailInputModel]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ConfirmEmailApi
     */
    apiAuthConfirmEmailPost(vLOBOARDSAreasAuthConfirmEmailInputModel?: VLOBOARDSAreasAuthConfirmEmailInputModel, options?: any): Promise<import("axios").AxiosResponse<void, any>>;
}
/**
 * ExternalLoginApi - axios parameter creator
 * @export
 */
export declare const ExternalLoginApiAxiosParamCreator: (configuration?: Configuration | undefined) => {
    /**
     *
     * @summary Callback executed when external auth provider redirects back to app
     * @param {string} [returnUrl]
     * @param {string} [remoteError]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiAuthExternalLoginCallbackGet: (returnUrl?: string | undefined, remoteError?: string | undefined, options?: any) => Promise<RequestArgs>;
    /**
     *
     * @summary Endpoint used for creating accounts when there\'s no account associated with external login
     * @param {string} [returnUrl]
     * @param {VLOBOARDSAreasAuthExternalLoginRegisterInputModel} [vLOBOARDSAreasAuthExternalLoginRegisterInputModel]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiAuthExternalLoginCreateAccountPost: (returnUrl?: string | undefined, vLOBOARDSAreasAuthExternalLoginRegisterInputModel?: VLOBOARDSAreasAuthExternalLoginRegisterInputModel | undefined, options?: any) => Promise<RequestArgs>;
    /**
     *
     * @summary Challenges user using external provider
     * @param {string} [provider]
     * @param {string} [returnUrl]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiAuthExternalLoginGet: (provider?: string | undefined, returnUrl?: string | undefined, options?: any) => Promise<RequestArgs>;
};
/**
 * ExternalLoginApi - functional programming interface
 * @export
 */
export declare const ExternalLoginApiFp: (configuration?: Configuration | undefined) => {
    /**
     *
     * @summary Callback executed when external auth provider redirects back to app
     * @param {string} [returnUrl]
     * @param {string} [remoteError]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiAuthExternalLoginCallbackGet(returnUrl?: string | undefined, remoteError?: string | undefined, options?: any): Promise<(axios?: AxiosInstance | undefined, basePath?: string | undefined) => AxiosPromise<void>>;
    /**
     *
     * @summary Endpoint used for creating accounts when there\'s no account associated with external login
     * @param {string} [returnUrl]
     * @param {VLOBOARDSAreasAuthExternalLoginRegisterInputModel} [vLOBOARDSAreasAuthExternalLoginRegisterInputModel]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiAuthExternalLoginCreateAccountPost(returnUrl?: string | undefined, vLOBOARDSAreasAuthExternalLoginRegisterInputModel?: VLOBOARDSAreasAuthExternalLoginRegisterInputModel | undefined, options?: any): Promise<(axios?: AxiosInstance | undefined, basePath?: string | undefined) => AxiosPromise<void>>;
    /**
     *
     * @summary Challenges user using external provider
     * @param {string} [provider]
     * @param {string} [returnUrl]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiAuthExternalLoginGet(provider?: string | undefined, returnUrl?: string | undefined, options?: any): Promise<(axios?: AxiosInstance | undefined, basePath?: string | undefined) => AxiosPromise<void>>;
};
/**
 * ExternalLoginApi - factory interface
 * @export
 */
export declare const ExternalLoginApiFactory: (configuration?: Configuration | undefined, basePath?: string | undefined, axios?: AxiosInstance | undefined) => {
    /**
     *
     * @summary Callback executed when external auth provider redirects back to app
     * @param {string} [returnUrl]
     * @param {string} [remoteError]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiAuthExternalLoginCallbackGet(returnUrl?: string | undefined, remoteError?: string | undefined, options?: any): AxiosPromise<void>;
    /**
     *
     * @summary Endpoint used for creating accounts when there\'s no account associated with external login
     * @param {string} [returnUrl]
     * @param {VLOBOARDSAreasAuthExternalLoginRegisterInputModel} [vLOBOARDSAreasAuthExternalLoginRegisterInputModel]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiAuthExternalLoginCreateAccountPost(returnUrl?: string | undefined, vLOBOARDSAreasAuthExternalLoginRegisterInputModel?: VLOBOARDSAreasAuthExternalLoginRegisterInputModel | undefined, options?: any): AxiosPromise<void>;
    /**
     *
     * @summary Challenges user using external provider
     * @param {string} [provider]
     * @param {string} [returnUrl]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiAuthExternalLoginGet(provider?: string | undefined, returnUrl?: string | undefined, options?: any): AxiosPromise<void>;
};
/**
 * ExternalLoginApi - object-oriented interface
 * @export
 * @class ExternalLoginApi
 * @extends {BaseAPI}
 */
export declare class ExternalLoginApi extends BaseAPI {
    /**
     *
     * @summary Callback executed when external auth provider redirects back to app
     * @param {string} [returnUrl]
     * @param {string} [remoteError]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ExternalLoginApi
     */
    apiAuthExternalLoginCallbackGet(returnUrl?: string, remoteError?: string, options?: any): Promise<import("axios").AxiosResponse<void, any>>;
    /**
     *
     * @summary Endpoint used for creating accounts when there\'s no account associated with external login
     * @param {string} [returnUrl]
     * @param {VLOBOARDSAreasAuthExternalLoginRegisterInputModel} [vLOBOARDSAreasAuthExternalLoginRegisterInputModel]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ExternalLoginApi
     */
    apiAuthExternalLoginCreateAccountPost(returnUrl?: string, vLOBOARDSAreasAuthExternalLoginRegisterInputModel?: VLOBOARDSAreasAuthExternalLoginRegisterInputModel, options?: any): Promise<import("axios").AxiosResponse<void, any>>;
    /**
     *
     * @summary Challenges user using external provider
     * @param {string} [provider]
     * @param {string} [returnUrl]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ExternalLoginApi
     */
    apiAuthExternalLoginGet(provider?: string, returnUrl?: string, options?: any): Promise<import("axios").AxiosResponse<void, any>>;
}
/**
 * ForgotPasswordApi - axios parameter creator
 * @export
 */
export declare const ForgotPasswordApiAxiosParamCreator: (configuration?: Configuration | undefined) => {
    /**
     *
     * @summary Sends password reset email based on given email
     * @param {VLOBOARDSAreasAuthForgotPasswordInputModel} [vLOBOARDSAreasAuthForgotPasswordInputModel]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiAuthForgotPasswordPost: (vLOBOARDSAreasAuthForgotPasswordInputModel?: VLOBOARDSAreasAuthForgotPasswordInputModel | undefined, options?: any) => Promise<RequestArgs>;
};
/**
 * ForgotPasswordApi - functional programming interface
 * @export
 */
export declare const ForgotPasswordApiFp: (configuration?: Configuration | undefined) => {
    /**
     *
     * @summary Sends password reset email based on given email
     * @param {VLOBOARDSAreasAuthForgotPasswordInputModel} [vLOBOARDSAreasAuthForgotPasswordInputModel]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiAuthForgotPasswordPost(vLOBOARDSAreasAuthForgotPasswordInputModel?: VLOBOARDSAreasAuthForgotPasswordInputModel | undefined, options?: any): Promise<(axios?: AxiosInstance | undefined, basePath?: string | undefined) => AxiosPromise<void>>;
};
/**
 * ForgotPasswordApi - factory interface
 * @export
 */
export declare const ForgotPasswordApiFactory: (configuration?: Configuration | undefined, basePath?: string | undefined, axios?: AxiosInstance | undefined) => {
    /**
     *
     * @summary Sends password reset email based on given email
     * @param {VLOBOARDSAreasAuthForgotPasswordInputModel} [vLOBOARDSAreasAuthForgotPasswordInputModel]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiAuthForgotPasswordPost(vLOBOARDSAreasAuthForgotPasswordInputModel?: VLOBOARDSAreasAuthForgotPasswordInputModel | undefined, options?: any): AxiosPromise<void>;
};
/**
 * ForgotPasswordApi - object-oriented interface
 * @export
 * @class ForgotPasswordApi
 * @extends {BaseAPI}
 */
export declare class ForgotPasswordApi extends BaseAPI {
    /**
     *
     * @summary Sends password reset email based on given email
     * @param {VLOBOARDSAreasAuthForgotPasswordInputModel} [vLOBOARDSAreasAuthForgotPasswordInputModel]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ForgotPasswordApi
     */
    apiAuthForgotPasswordPost(vLOBOARDSAreasAuthForgotPasswordInputModel?: VLOBOARDSAreasAuthForgotPasswordInputModel, options?: any): Promise<import("axios").AxiosResponse<void, any>>;
}
/**
 * LoginApi - axios parameter creator
 * @export
 */
export declare const LoginApiAxiosParamCreator: (configuration?: Configuration | undefined) => {
    /**
     *
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiAuthLoginClearExternalCookiesPost: (options?: any) => Promise<RequestArgs>;
    /**
     *
     * @summary Endpoint used to log user in based on username, password
     * @param {string} [returnUrl]
     * @param {VLOBOARDSAreasAuthLoginInputModel} [vLOBOARDSAreasAuthLoginInputModel]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiAuthLoginPost: (returnUrl?: string | undefined, vLOBOARDSAreasAuthLoginInputModel?: VLOBOARDSAreasAuthLoginInputModel | undefined, options?: any) => Promise<RequestArgs>;
};
/**
 * LoginApi - functional programming interface
 * @export
 */
export declare const LoginApiFp: (configuration?: Configuration | undefined) => {
    /**
     *
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiAuthLoginClearExternalCookiesPost(options?: any): Promise<(axios?: AxiosInstance | undefined, basePath?: string | undefined) => AxiosPromise<void>>;
    /**
     *
     * @summary Endpoint used to log user in based on username, password
     * @param {string} [returnUrl]
     * @param {VLOBOARDSAreasAuthLoginInputModel} [vLOBOARDSAreasAuthLoginInputModel]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiAuthLoginPost(returnUrl?: string | undefined, vLOBOARDSAreasAuthLoginInputModel?: VLOBOARDSAreasAuthLoginInputModel | undefined, options?: any): Promise<(axios?: AxiosInstance | undefined, basePath?: string | undefined) => AxiosPromise<VLOBOARDSAreasAuthLoginResult>>;
};
/**
 * LoginApi - factory interface
 * @export
 */
export declare const LoginApiFactory: (configuration?: Configuration | undefined, basePath?: string | undefined, axios?: AxiosInstance | undefined) => {
    /**
     *
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiAuthLoginClearExternalCookiesPost(options?: any): AxiosPromise<void>;
    /**
     *
     * @summary Endpoint used to log user in based on username, password
     * @param {string} [returnUrl]
     * @param {VLOBOARDSAreasAuthLoginInputModel} [vLOBOARDSAreasAuthLoginInputModel]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiAuthLoginPost(returnUrl?: string | undefined, vLOBOARDSAreasAuthLoginInputModel?: VLOBOARDSAreasAuthLoginInputModel | undefined, options?: any): AxiosPromise<VLOBOARDSAreasAuthLoginResult>;
};
/**
 * LoginApi - object-oriented interface
 * @export
 * @class LoginApi
 * @extends {BaseAPI}
 */
export declare class LoginApi extends BaseAPI {
    /**
     *
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof LoginApi
     */
    apiAuthLoginClearExternalCookiesPost(options?: any): Promise<import("axios").AxiosResponse<void, any>>;
    /**
     *
     * @summary Endpoint used to log user in based on username, password
     * @param {string} [returnUrl]
     * @param {VLOBOARDSAreasAuthLoginInputModel} [vLOBOARDSAreasAuthLoginInputModel]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof LoginApi
     */
    apiAuthLoginPost(returnUrl?: string, vLOBOARDSAreasAuthLoginInputModel?: VLOBOARDSAreasAuthLoginInputModel, options?: any): Promise<import("axios").AxiosResponse<VLOBOARDSAreasAuthLoginResult, any>>;
}
/**
 * Login2FAApi - axios parameter creator
 * @export
 */
export declare const Login2FAApiAxiosParamCreator: (configuration?: Configuration | undefined) => {
    /**
     *
     * @summary Logs user in based on 2FA code
     * @param {string} [returnUrl]
     * @param {VLOBOARDSAreasAuthLogin2FAInputModel} [vLOBOARDSAreasAuthLogin2FAInputModel]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiAuthLogin2FAPost: (returnUrl?: string | undefined, vLOBOARDSAreasAuthLogin2FAInputModel?: VLOBOARDSAreasAuthLogin2FAInputModel | undefined, options?: any) => Promise<RequestArgs>;
};
/**
 * Login2FAApi - functional programming interface
 * @export
 */
export declare const Login2FAApiFp: (configuration?: Configuration | undefined) => {
    /**
     *
     * @summary Logs user in based on 2FA code
     * @param {string} [returnUrl]
     * @param {VLOBOARDSAreasAuthLogin2FAInputModel} [vLOBOARDSAreasAuthLogin2FAInputModel]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiAuthLogin2FAPost(returnUrl?: string | undefined, vLOBOARDSAreasAuthLogin2FAInputModel?: VLOBOARDSAreasAuthLogin2FAInputModel | undefined, options?: any): Promise<(axios?: AxiosInstance | undefined, basePath?: string | undefined) => AxiosPromise<VLOBOARDSAreasAuthLoginResult>>;
};
/**
 * Login2FAApi - factory interface
 * @export
 */
export declare const Login2FAApiFactory: (configuration?: Configuration | undefined, basePath?: string | undefined, axios?: AxiosInstance | undefined) => {
    /**
     *
     * @summary Logs user in based on 2FA code
     * @param {string} [returnUrl]
     * @param {VLOBOARDSAreasAuthLogin2FAInputModel} [vLOBOARDSAreasAuthLogin2FAInputModel]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiAuthLogin2FAPost(returnUrl?: string | undefined, vLOBOARDSAreasAuthLogin2FAInputModel?: VLOBOARDSAreasAuthLogin2FAInputModel | undefined, options?: any): AxiosPromise<VLOBOARDSAreasAuthLoginResult>;
};
/**
 * Login2FAApi - object-oriented interface
 * @export
 * @class Login2FAApi
 * @extends {BaseAPI}
 */
export declare class Login2FAApi extends BaseAPI {
    /**
     *
     * @summary Logs user in based on 2FA code
     * @param {string} [returnUrl]
     * @param {VLOBOARDSAreasAuthLogin2FAInputModel} [vLOBOARDSAreasAuthLogin2FAInputModel]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof Login2FAApi
     */
    apiAuthLogin2FAPost(returnUrl?: string, vLOBOARDSAreasAuthLogin2FAInputModel?: VLOBOARDSAreasAuthLogin2FAInputModel, options?: any): Promise<import("axios").AxiosResponse<VLOBOARDSAreasAuthLoginResult, any>>;
}
/**
 * LoginWithRecoveryCodeApi - axios parameter creator
 * @export
 */
export declare const LoginWithRecoveryCodeApiAxiosParamCreator: (configuration?: Configuration | undefined) => {
    /**
     * Also sanitizes returnurl. Who could\'ve thought
     * @summary Logins user using 2fa recovery code
     * @param {string} [returnUrl]
     * @param {VLOBOARDSAreasAuthLoginWithRecoveryCodeInputModel} [vLOBOARDSAreasAuthLoginWithRecoveryCodeInputModel]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiAuthLoginWithRecoveryCodePost: (returnUrl?: string | undefined, vLOBOARDSAreasAuthLoginWithRecoveryCodeInputModel?: VLOBOARDSAreasAuthLoginWithRecoveryCodeInputModel | undefined, options?: any) => Promise<RequestArgs>;
};
/**
 * LoginWithRecoveryCodeApi - functional programming interface
 * @export
 */
export declare const LoginWithRecoveryCodeApiFp: (configuration?: Configuration | undefined) => {
    /**
     * Also sanitizes returnurl. Who could\'ve thought
     * @summary Logins user using 2fa recovery code
     * @param {string} [returnUrl]
     * @param {VLOBOARDSAreasAuthLoginWithRecoveryCodeInputModel} [vLOBOARDSAreasAuthLoginWithRecoveryCodeInputModel]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiAuthLoginWithRecoveryCodePost(returnUrl?: string | undefined, vLOBOARDSAreasAuthLoginWithRecoveryCodeInputModel?: VLOBOARDSAreasAuthLoginWithRecoveryCodeInputModel | undefined, options?: any): Promise<(axios?: AxiosInstance | undefined, basePath?: string | undefined) => AxiosPromise<VLOBOARDSAreasAuthLoginWithRecoveryCodeResult>>;
};
/**
 * LoginWithRecoveryCodeApi - factory interface
 * @export
 */
export declare const LoginWithRecoveryCodeApiFactory: (configuration?: Configuration | undefined, basePath?: string | undefined, axios?: AxiosInstance | undefined) => {
    /**
     * Also sanitizes returnurl. Who could\'ve thought
     * @summary Logins user using 2fa recovery code
     * @param {string} [returnUrl]
     * @param {VLOBOARDSAreasAuthLoginWithRecoveryCodeInputModel} [vLOBOARDSAreasAuthLoginWithRecoveryCodeInputModel]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiAuthLoginWithRecoveryCodePost(returnUrl?: string | undefined, vLOBOARDSAreasAuthLoginWithRecoveryCodeInputModel?: VLOBOARDSAreasAuthLoginWithRecoveryCodeInputModel | undefined, options?: any): AxiosPromise<VLOBOARDSAreasAuthLoginWithRecoveryCodeResult>;
};
/**
 * LoginWithRecoveryCodeApi - object-oriented interface
 * @export
 * @class LoginWithRecoveryCodeApi
 * @extends {BaseAPI}
 */
export declare class LoginWithRecoveryCodeApi extends BaseAPI {
    /**
     * Also sanitizes returnurl. Who could\'ve thought
     * @summary Logins user using 2fa recovery code
     * @param {string} [returnUrl]
     * @param {VLOBOARDSAreasAuthLoginWithRecoveryCodeInputModel} [vLOBOARDSAreasAuthLoginWithRecoveryCodeInputModel]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof LoginWithRecoveryCodeApi
     */
    apiAuthLoginWithRecoveryCodePost(returnUrl?: string, vLOBOARDSAreasAuthLoginWithRecoveryCodeInputModel?: VLOBOARDSAreasAuthLoginWithRecoveryCodeInputModel, options?: any): Promise<import("axios").AxiosResponse<VLOBOARDSAreasAuthLoginWithRecoveryCodeResult, any>>;
}
/**
 * LogoutApi - axios parameter creator
 * @export
 */
export declare const LogoutApiAxiosParamCreator: (configuration?: Configuration | undefined) => {
    /**
     * Will sanitize returnurl
     * @summary Logs user out
     * @param {string} [returnUrl]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiAuthLogoutPost: (returnUrl?: string | undefined, options?: any) => Promise<RequestArgs>;
};
/**
 * LogoutApi - functional programming interface
 * @export
 */
export declare const LogoutApiFp: (configuration?: Configuration | undefined) => {
    /**
     * Will sanitize returnurl
     * @summary Logs user out
     * @param {string} [returnUrl]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiAuthLogoutPost(returnUrl?: string | undefined, options?: any): Promise<(axios?: AxiosInstance | undefined, basePath?: string | undefined) => AxiosPromise<VLOBOARDSAreasAuthLogoutResult>>;
};
/**
 * LogoutApi - factory interface
 * @export
 */
export declare const LogoutApiFactory: (configuration?: Configuration | undefined, basePath?: string | undefined, axios?: AxiosInstance | undefined) => {
    /**
     * Will sanitize returnurl
     * @summary Logs user out
     * @param {string} [returnUrl]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiAuthLogoutPost(returnUrl?: string | undefined, options?: any): AxiosPromise<VLOBOARDSAreasAuthLogoutResult>;
};
/**
 * LogoutApi - object-oriented interface
 * @export
 * @class LogoutApi
 * @extends {BaseAPI}
 */
export declare class LogoutApi extends BaseAPI {
    /**
     * Will sanitize returnurl
     * @summary Logs user out
     * @param {string} [returnUrl]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof LogoutApi
     */
    apiAuthLogoutPost(returnUrl?: string, options?: any): Promise<import("axios").AxiosResponse<VLOBOARDSAreasAuthLogoutResult, any>>;
}
/**
 * RegisterApi - axios parameter creator
 * @export
 */
export declare const RegisterApiAxiosParamCreator: (configuration?: Configuration | undefined) => {
    /**
     *
     * @param {string} [returnUrl]
     * @param {VLOBOARDSAreasAuthRegisterInputModel} [vLOBOARDSAreasAuthRegisterInputModel]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiAuthRegisterPost: (returnUrl?: string | undefined, vLOBOARDSAreasAuthRegisterInputModel?: VLOBOARDSAreasAuthRegisterInputModel | undefined, options?: any) => Promise<RequestArgs>;
};
/**
 * RegisterApi - functional programming interface
 * @export
 */
export declare const RegisterApiFp: (configuration?: Configuration | undefined) => {
    /**
     *
     * @param {string} [returnUrl]
     * @param {VLOBOARDSAreasAuthRegisterInputModel} [vLOBOARDSAreasAuthRegisterInputModel]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiAuthRegisterPost(returnUrl?: string | undefined, vLOBOARDSAreasAuthRegisterInputModel?: VLOBOARDSAreasAuthRegisterInputModel | undefined, options?: any): Promise<(axios?: AxiosInstance | undefined, basePath?: string | undefined) => AxiosPromise<VLOBOARDSAreasAuthRegistrationResult>>;
};
/**
 * RegisterApi - factory interface
 * @export
 */
export declare const RegisterApiFactory: (configuration?: Configuration | undefined, basePath?: string | undefined, axios?: AxiosInstance | undefined) => {
    /**
     *
     * @param {string} [returnUrl]
     * @param {VLOBOARDSAreasAuthRegisterInputModel} [vLOBOARDSAreasAuthRegisterInputModel]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiAuthRegisterPost(returnUrl?: string | undefined, vLOBOARDSAreasAuthRegisterInputModel?: VLOBOARDSAreasAuthRegisterInputModel | undefined, options?: any): AxiosPromise<VLOBOARDSAreasAuthRegistrationResult>;
};
/**
 * RegisterApi - object-oriented interface
 * @export
 * @class RegisterApi
 * @extends {BaseAPI}
 */
export declare class RegisterApi extends BaseAPI {
    /**
     *
     * @param {string} [returnUrl]
     * @param {VLOBOARDSAreasAuthRegisterInputModel} [vLOBOARDSAreasAuthRegisterInputModel]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof RegisterApi
     */
    apiAuthRegisterPost(returnUrl?: string, vLOBOARDSAreasAuthRegisterInputModel?: VLOBOARDSAreasAuthRegisterInputModel, options?: any): Promise<import("axios").AxiosResponse<VLOBOARDSAreasAuthRegistrationResult, any>>;
}
/**
 * ResendEmailConfirmationApi - axios parameter creator
 * @export
 */
export declare const ResendEmailConfirmationApiAxiosParamCreator: (configuration?: Configuration | undefined) => {
    /**
     *
     * @summary Resends email confirmation
     * @param {VLOBOARDSAreasAuthResendEmailConfirmationInputModel} [vLOBOARDSAreasAuthResendEmailConfirmationInputModel]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiAuthResendEmailConfirmationPost: (vLOBOARDSAreasAuthResendEmailConfirmationInputModel?: VLOBOARDSAreasAuthResendEmailConfirmationInputModel | undefined, options?: any) => Promise<RequestArgs>;
};
/**
 * ResendEmailConfirmationApi - functional programming interface
 * @export
 */
export declare const ResendEmailConfirmationApiFp: (configuration?: Configuration | undefined) => {
    /**
     *
     * @summary Resends email confirmation
     * @param {VLOBOARDSAreasAuthResendEmailConfirmationInputModel} [vLOBOARDSAreasAuthResendEmailConfirmationInputModel]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiAuthResendEmailConfirmationPost(vLOBOARDSAreasAuthResendEmailConfirmationInputModel?: VLOBOARDSAreasAuthResendEmailConfirmationInputModel | undefined, options?: any): Promise<(axios?: AxiosInstance | undefined, basePath?: string | undefined) => AxiosPromise<void>>;
};
/**
 * ResendEmailConfirmationApi - factory interface
 * @export
 */
export declare const ResendEmailConfirmationApiFactory: (configuration?: Configuration | undefined, basePath?: string | undefined, axios?: AxiosInstance | undefined) => {
    /**
     *
     * @summary Resends email confirmation
     * @param {VLOBOARDSAreasAuthResendEmailConfirmationInputModel} [vLOBOARDSAreasAuthResendEmailConfirmationInputModel]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiAuthResendEmailConfirmationPost(vLOBOARDSAreasAuthResendEmailConfirmationInputModel?: VLOBOARDSAreasAuthResendEmailConfirmationInputModel | undefined, options?: any): AxiosPromise<void>;
};
/**
 * ResendEmailConfirmationApi - object-oriented interface
 * @export
 * @class ResendEmailConfirmationApi
 * @extends {BaseAPI}
 */
export declare class ResendEmailConfirmationApi extends BaseAPI {
    /**
     *
     * @summary Resends email confirmation
     * @param {VLOBOARDSAreasAuthResendEmailConfirmationInputModel} [vLOBOARDSAreasAuthResendEmailConfirmationInputModel]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ResendEmailConfirmationApi
     */
    apiAuthResendEmailConfirmationPost(vLOBOARDSAreasAuthResendEmailConfirmationInputModel?: VLOBOARDSAreasAuthResendEmailConfirmationInputModel, options?: any): Promise<import("axios").AxiosResponse<void, any>>;
}
/**
 * ResetPasswordApi - axios parameter creator
 * @export
 */
export declare const ResetPasswordApiAxiosParamCreator: (configuration?: Configuration | undefined) => {
    /**
     *
     * @summary Changes the password to a new one based on input
     * @param {VLOBOARDSAreasAuthResetPasswordInputModel} [vLOBOARDSAreasAuthResetPasswordInputModel]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiAuthResetPasswordPost: (vLOBOARDSAreasAuthResetPasswordInputModel?: VLOBOARDSAreasAuthResetPasswordInputModel | undefined, options?: any) => Promise<RequestArgs>;
};
/**
 * ResetPasswordApi - functional programming interface
 * @export
 */
export declare const ResetPasswordApiFp: (configuration?: Configuration | undefined) => {
    /**
     *
     * @summary Changes the password to a new one based on input
     * @param {VLOBOARDSAreasAuthResetPasswordInputModel} [vLOBOARDSAreasAuthResetPasswordInputModel]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiAuthResetPasswordPost(vLOBOARDSAreasAuthResetPasswordInputModel?: VLOBOARDSAreasAuthResetPasswordInputModel | undefined, options?: any): Promise<(axios?: AxiosInstance | undefined, basePath?: string | undefined) => AxiosPromise<string>>;
};
/**
 * ResetPasswordApi - factory interface
 * @export
 */
export declare const ResetPasswordApiFactory: (configuration?: Configuration | undefined, basePath?: string | undefined, axios?: AxiosInstance | undefined) => {
    /**
     *
     * @summary Changes the password to a new one based on input
     * @param {VLOBOARDSAreasAuthResetPasswordInputModel} [vLOBOARDSAreasAuthResetPasswordInputModel]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiAuthResetPasswordPost(vLOBOARDSAreasAuthResetPasswordInputModel?: VLOBOARDSAreasAuthResetPasswordInputModel | undefined, options?: any): AxiosPromise<string>;
};
/**
 * ResetPasswordApi - object-oriented interface
 * @export
 * @class ResetPasswordApi
 * @extends {BaseAPI}
 */
export declare class ResetPasswordApi extends BaseAPI {
    /**
     *
     * @summary Changes the password to a new one based on input
     * @param {VLOBOARDSAreasAuthResetPasswordInputModel} [vLOBOARDSAreasAuthResetPasswordInputModel]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ResetPasswordApi
     */
    apiAuthResetPasswordPost(vLOBOARDSAreasAuthResetPasswordInputModel?: VLOBOARDSAreasAuthResetPasswordInputModel, options?: any): Promise<import("axios").AxiosResponse<string, any>>;
}
/**
 * ReturnUrlInfoApi - axios parameter creator
 * @export
 */
export declare const ReturnUrlInfoApiAxiosParamCreator: (configuration?: Configuration | undefined) => {
    /**
     * Use every time you need to check whether to redirect to returnurl
     * @summary Returns information about client associated with returnurl
     * @param {VLOBOARDSAreasAuthReturnUrlInfoInputModel} [vLOBOARDSAreasAuthReturnUrlInfoInputModel]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiAuthReturnUrlInfoPost: (vLOBOARDSAreasAuthReturnUrlInfoInputModel?: VLOBOARDSAreasAuthReturnUrlInfoInputModel | undefined, options?: any) => Promise<RequestArgs>;
};
/**
 * ReturnUrlInfoApi - functional programming interface
 * @export
 */
export declare const ReturnUrlInfoApiFp: (configuration?: Configuration | undefined) => {
    /**
     * Use every time you need to check whether to redirect to returnurl
     * @summary Returns information about client associated with returnurl
     * @param {VLOBOARDSAreasAuthReturnUrlInfoInputModel} [vLOBOARDSAreasAuthReturnUrlInfoInputModel]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiAuthReturnUrlInfoPost(vLOBOARDSAreasAuthReturnUrlInfoInputModel?: VLOBOARDSAreasAuthReturnUrlInfoInputModel | undefined, options?: any): Promise<(axios?: AxiosInstance | undefined, basePath?: string | undefined) => AxiosPromise<VLOBOARDSAreasAuthReturnUrlInfo>>;
};
/**
 * ReturnUrlInfoApi - factory interface
 * @export
 */
export declare const ReturnUrlInfoApiFactory: (configuration?: Configuration | undefined, basePath?: string | undefined, axios?: AxiosInstance | undefined) => {
    /**
     * Use every time you need to check whether to redirect to returnurl
     * @summary Returns information about client associated with returnurl
     * @param {VLOBOARDSAreasAuthReturnUrlInfoInputModel} [vLOBOARDSAreasAuthReturnUrlInfoInputModel]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiAuthReturnUrlInfoPost(vLOBOARDSAreasAuthReturnUrlInfoInputModel?: VLOBOARDSAreasAuthReturnUrlInfoInputModel | undefined, options?: any): AxiosPromise<VLOBOARDSAreasAuthReturnUrlInfo>;
};
/**
 * ReturnUrlInfoApi - object-oriented interface
 * @export
 * @class ReturnUrlInfoApi
 * @extends {BaseAPI}
 */
export declare class ReturnUrlInfoApi extends BaseAPI {
    /**
     * Use every time you need to check whether to redirect to returnurl
     * @summary Returns information about client associated with returnurl
     * @param {VLOBOARDSAreasAuthReturnUrlInfoInputModel} [vLOBOARDSAreasAuthReturnUrlInfoInputModel]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ReturnUrlInfoApi
     */
    apiAuthReturnUrlInfoPost(vLOBOARDSAreasAuthReturnUrlInfoInputModel?: VLOBOARDSAreasAuthReturnUrlInfoInputModel, options?: any): Promise<import("axios").AxiosResponse<VLOBOARDSAreasAuthReturnUrlInfo, any>>;
}
//# sourceMappingURL=api.d.ts.map