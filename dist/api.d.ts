/**
 * ASP.NETCore_suvlo
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * Contact: gkjuszczyk@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { Configuration } from './configuration';
import { AxiosPromise, AxiosInstance } from 'axios';
import { RequestArgs, BaseAPI } from './base';
/**
 *
 * @export
 * @interface AccountsDataModelsDataModelsApplicationUser
 */
export interface AccountsDataModelsDataModelsApplicationUser {
    /**
     *
     * @type {string}
     * @memberof AccountsDataModelsDataModelsApplicationUser
     */
    id?: string | null;
    /**
     *
     * @type {string}
     * @memberof AccountsDataModelsDataModelsApplicationUser
     */
    userName?: string | null;
    /**
     *
     * @type {string}
     * @memberof AccountsDataModelsDataModelsApplicationUser
     */
    normalizedUserName?: string | null;
    /**
     *
     * @type {string}
     * @memberof AccountsDataModelsDataModelsApplicationUser
     */
    email?: string | null;
    /**
     *
     * @type {string}
     * @memberof AccountsDataModelsDataModelsApplicationUser
     */
    normalizedEmail?: string | null;
    /**
     *
     * @type {boolean}
     * @memberof AccountsDataModelsDataModelsApplicationUser
     */
    emailConfirmed?: boolean;
    /**
     *
     * @type {string}
     * @memberof AccountsDataModelsDataModelsApplicationUser
     */
    phoneNumber?: string | null;
    /**
     *
     * @type {boolean}
     * @memberof AccountsDataModelsDataModelsApplicationUser
     */
    phoneNumberConfirmed?: boolean;
    /**
     *
     * @type {boolean}
     * @memberof AccountsDataModelsDataModelsApplicationUser
     */
    twoFactorEnabled?: boolean;
    /**
     *
     * @type {string}
     * @memberof AccountsDataModelsDataModelsApplicationUser
     */
    lockoutEnd?: string | null;
    /**
     *
     * @type {boolean}
     * @memberof AccountsDataModelsDataModelsApplicationUser
     */
    lockoutEnabled?: boolean;
    /**
     *
     * @type {number}
     * @memberof AccountsDataModelsDataModelsApplicationUser
     */
    accessFailedCount?: number;
    /**
     *
     * @type {AccountsDataModelsDataModelsProfilePicture}
     * @memberof AccountsDataModelsDataModelsApplicationUser
     */
    profilePicture?: AccountsDataModelsDataModelsProfilePicture;
    /**
     *
     * @type {number}
     * @memberof AccountsDataModelsDataModelsApplicationUser
     */
    socialCredit?: number;
    /**
     *
     * @type {boolean}
     * @memberof AccountsDataModelsDataModelsApplicationUser
     */
    hasPassword?: boolean;
    /**
     *
     * @type {number}
     * @memberof AccountsDataModelsDataModelsApplicationUser
     */
    fidoCount?: number;
    /**
     *
     * @type {number}
     * @memberof AccountsDataModelsDataModelsApplicationUser
     */
    usedBytes?: number;
    /**
     *
     * @type {number}
     * @memberof AccountsDataModelsDataModelsApplicationUser
     */
    maxBytes?: number;
}
/**
 *
 * @export
 * @interface AccountsDataModelsDataModelsArticle
 */
export interface AccountsDataModelsDataModelsArticle {
    /**
     *
     * @type {string}
     * @memberof AccountsDataModelsDataModelsArticle
     */
    articleId?: string | null;
    /**
     *
     * @type {AccountsDataModelsDataModelsApplicationUser}
     * @memberof AccountsDataModelsDataModelsArticle
     */
    author?: AccountsDataModelsDataModelsApplicationUser;
    /**
     *
     * @type {string}
     * @memberof AccountsDataModelsDataModelsArticle
     */
    title?: string | null;
    /**
     *
     * @type {Array<AccountsDataModelsDataModelsTag>}
     * @memberof AccountsDataModelsDataModelsArticle
     */
    tags?: Array<AccountsDataModelsDataModelsTag> | null;
    /**
     *
     * @type {string}
     * @memberof AccountsDataModelsDataModelsArticle
     */
    modifiedOn?: string;
    /**
     *
     * @type {boolean}
     * @memberof AccountsDataModelsDataModelsArticle
     */
    _public?: boolean;
    /**
     *
     * @type {Array<AccountsDataModelsDataModelsApplicationUser>}
     * @memberof AccountsDataModelsDataModelsArticle
     */
    editors?: Array<AccountsDataModelsDataModelsApplicationUser> | null;
    /**
     *
     * @type {Array<AccountsDataModelsDataModelsApplicationUser>}
     * @memberof AccountsDataModelsDataModelsArticle
     */
    reviewers?: Array<AccountsDataModelsDataModelsApplicationUser> | null;
    /**
     *
     * @type {string}
     * @memberof AccountsDataModelsDataModelsArticle
     */
    contentJson?: string | null;
    /**
     *
     * @type {string}
     * @memberof AccountsDataModelsDataModelsArticle
     */
    contentText?: string | null;
    /**
     *
     * @type {Array<Revision>}
     * @memberof AccountsDataModelsDataModelsArticle
     */
    revisions?: Array<Revision> | null;
    /**
     *
     * @type {boolean}
     * @memberof AccountsDataModelsDataModelsArticle
     */
    autoPublish?: boolean;
    /**
     *
     * @type {string}
     * @memberof AccountsDataModelsDataModelsArticle
     */
    autoPublishOn?: string;
    /**
     *
     * @type {AccountsDataModelsDataModelsFile}
     * @memberof AccountsDataModelsDataModelsArticle
     */
    picture?: AccountsDataModelsDataModelsFile;
}
/**
 *
 * @export
 * @interface AccountsDataModelsDataModelsFile
 */
export interface AccountsDataModelsDataModelsFile {
    /**
     *
     * @type {string}
     * @memberof AccountsDataModelsDataModelsFile
     */
    objectId?: string | null;
    /**
     *
     * @type {string}
     * @memberof AccountsDataModelsDataModelsFile
     */
    bucket?: string | null;
    /**
     *
     * @type {boolean}
     * @memberof AccountsDataModelsDataModelsFile
     */
    backedInMinio?: boolean;
    /**
     *
     * @type {boolean}
     * @memberof AccountsDataModelsDataModelsFile
     */
    userManageable?: boolean;
    /**
     *
     * @type {boolean}
     * @memberof AccountsDataModelsDataModelsFile
     */
    _public?: boolean;
    /**
     *
     * @type {string}
     * @memberof AccountsDataModelsDataModelsFile
     */
    fileName?: string | null;
    /**
     *
     * @type {string}
     * @memberof AccountsDataModelsDataModelsFile
     */
    contentType?: string | null;
    /**
     *
     * @type {string}
     * @memberof AccountsDataModelsDataModelsFile
     */
    ownerId?: string | null;
    /**
     *
     * @type {number}
     * @memberof AccountsDataModelsDataModelsFile
     */
    byteSize?: number;
    /**
     *
     * @type {string}
     * @memberof AccountsDataModelsDataModelsFile
     */
    parentId?: string | null;
    /**
     *
     * @type {AccountsDataModelsDataModelsFolder}
     * @memberof AccountsDataModelsDataModelsFile
     */
    parent?: AccountsDataModelsDataModelsFolder;
}
/**
 *
 * @export
 * @interface AccountsDataModelsDataModelsFolder
 */
export interface AccountsDataModelsDataModelsFolder {
    /**
     *
     * @type {string}
     * @memberof AccountsDataModelsDataModelsFolder
     */
    id?: string | null;
    /**
     *
     * @type {string}
     * @memberof AccountsDataModelsDataModelsFolder
     */
    name?: string | null;
    /**
     *
     * @type {string}
     * @memberof AccountsDataModelsDataModelsFolder
     */
    ownerId?: string | null;
    /**
     *
     * @type {string}
     * @memberof AccountsDataModelsDataModelsFolder
     */
    masterFolderId?: string | null;
}
/**
 *
 * @export
 * @interface AccountsDataModelsDataModelsProfilePicture
 */
export interface AccountsDataModelsDataModelsProfilePicture {
    /**
     *
     * @type {string}
     * @memberof AccountsDataModelsDataModelsProfilePicture
     */
    id?: string | null;
    /**
     *
     * @type {AccountsDataModelsDataModelsFile}
     * @memberof AccountsDataModelsDataModelsProfilePicture
     */
    picture?: AccountsDataModelsDataModelsFile;
    /**
     *
     * @type {string}
     * @memberof AccountsDataModelsDataModelsProfilePicture
     */
    ownerId?: string | null;
}
/**
 *
 * @export
 * @interface AccountsDataModelsDataModelsTag
 */
export interface AccountsDataModelsDataModelsTag {
    /**
     *
     * @type {string}
     * @memberof AccountsDataModelsDataModelsTag
     */
    id?: string | null;
    /**
     *
     * @type {string}
     * @memberof AccountsDataModelsDataModelsTag
     */
    authorId?: string | null;
    /**
     *
     * @type {string}
     * @memberof AccountsDataModelsDataModelsTag
     */
    content?: string | null;
}
/**
 *
 * @export
 * @interface MicrosoftAspNetCoreMvcProblemDetails
 */
export interface MicrosoftAspNetCoreMvcProblemDetails {
    [key: string]: any | any;
    /**
     *
     * @type {string}
     * @memberof MicrosoftAspNetCoreMvcProblemDetails
     */
    type?: string | null;
    /**
     *
     * @type {string}
     * @memberof MicrosoftAspNetCoreMvcProblemDetails
     */
    title?: string | null;
    /**
     *
     * @type {number}
     * @memberof MicrosoftAspNetCoreMvcProblemDetails
     */
    status?: number | null;
    /**
     *
     * @type {string}
     * @memberof MicrosoftAspNetCoreMvcProblemDetails
     */
    detail?: string | null;
    /**
     *
     * @type {string}
     * @memberof MicrosoftAspNetCoreMvcProblemDetails
     */
    instance?: string | null;
}
/**
 *
 * @export
 * @interface Revision
 */
export interface Revision {
    /**
     *
     * @type {string}
     * @memberof Revision
     */
    revisionId?: string | null;
    /**
     *
     * @type {string}
     * @memberof Revision
     */
    contentJson?: string | null;
    /**
     *
     * @type {string}
     * @memberof Revision
     */
    modifiedOn?: string;
    /**
     *
     * @type {string}
     * @memberof Revision
     */
    articleId?: string | null;
}
/**
 *
 * @export
 * @interface VloMainAreasArticleArticleControllerArticleBoolInput
 */
export interface VloMainAreasArticleArticleControllerArticleBoolInput {
    /**
     *
     * @type {string}
     * @memberof VloMainAreasArticleArticleControllerArticleBoolInput
     */
    articleId?: string | null;
    /**
     *
     * @type {boolean}
     * @memberof VloMainAreasArticleArticleControllerArticleBoolInput
     */
    _public?: boolean;
}
/**
 *
 * @export
 * @interface VloMainAreasArticleArticleControllerArticleDateInput
 */
export interface VloMainAreasArticleArticleControllerArticleDateInput {
    /**
     *
     * @type {string}
     * @memberof VloMainAreasArticleArticleControllerArticleDateInput
     */
    publishOn?: string;
    /**
     *
     * @type {string}
     * @memberof VloMainAreasArticleArticleControllerArticleDateInput
     */
    articleId?: string | null;
}
/**
 *
 * @export
 * @interface VloMainAreasArticleArticleControllerArticleTitleInput
 */
export interface VloMainAreasArticleArticleControllerArticleTitleInput {
    /**
     *
     * @type {string}
     * @memberof VloMainAreasArticleArticleControllerArticleTitleInput
     */
    articleId: string;
    /**
     *
     * @type {string}
     * @memberof VloMainAreasArticleArticleControllerArticleTitleInput
     */
    title: string;
}
/**
 *
 * @export
 * @interface VloMainAreasArticleArticleUpdateInput
 */
export interface VloMainAreasArticleArticleUpdateInput {
    /**
     *
     * @type {string}
     * @memberof VloMainAreasArticleArticleUpdateInput
     */
    articleId: string;
    /**
     *
     * @type {string}
     * @memberof VloMainAreasArticleArticleUpdateInput
     */
    contentJson: string;
}
/**
 *
 * @export
 * @interface VloMainAreasArticleUserArticleInput
 */
export interface VloMainAreasArticleUserArticleInput {
    /**
     *
     * @type {string}
     * @memberof VloMainAreasArticleUserArticleInput
     */
    articleId: string;
    /**
     *
     * @type {string}
     * @memberof VloMainAreasArticleUserArticleInput
     */
    userId: string;
}
/**
 * ArticleApi - axios parameter creator
 * @export
 */
export declare const ArticleApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     *
     * @param {VloMainAreasArticleUserArticleInput} [vloMainAreasArticleUserArticleInput]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiArticlesArticleAddEditorPut: (vloMainAreasArticleUserArticleInput?: VloMainAreasArticleUserArticleInput, options?: any) => Promise<RequestArgs>;
    /**
     *
     * @param {string} [articleId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiArticlesArticleGetArticleGet: (articleId?: string, options?: any) => Promise<RequestArgs>;
    /**
     *
     * @param {string} [articleId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiArticlesArticleGetContentGet: (articleId?: string, options?: any) => Promise<RequestArgs>;
    /**
     *
     * @param {string} [articleId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiArticlesArticleGetPictureGet: (articleId?: string, options?: any) => Promise<RequestArgs>;
    /**
     *
     * @param {string} [articleId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiArticlesArticleGetTagsGet: (articleId?: string, options?: any) => Promise<RequestArgs>;
    /**
     *
     * @summary Creates a blank article and returns its ID
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiArticlesArticlePost: (options?: any) => Promise<RequestArgs>;
    /**
     *
     * @param {VloMainAreasArticleArticleUpdateInput} [vloMainAreasArticleArticleUpdateInput]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiArticlesArticlePut: (vloMainAreasArticleArticleUpdateInput?: VloMainAreasArticleArticleUpdateInput, options?: any) => Promise<RequestArgs>;
    /**
     *
     * @param {VloMainAreasArticleUserArticleInput} [vloMainAreasArticleUserArticleInput]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiArticlesArticleRemoveEditorDelete: (vloMainAreasArticleUserArticleInput?: VloMainAreasArticleUserArticleInput, options?: any) => Promise<RequestArgs>;
    /**
     *
     * @param {string} [query]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiArticlesArticleSearchArticlesGet: (query?: string, options?: any) => Promise<RequestArgs>;
    /**
     *
     * @param {string} articleId
     * @param {any} file
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiArticlesArticleSetPicturePost: (articleId: string, file: any, options?: any) => Promise<RequestArgs>;
    /**
     *
     * @param {VloMainAreasArticleArticleControllerArticleBoolInput} [vloMainAreasArticleArticleControllerArticleBoolInput]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiArticlesArticleSetPublicPut: (vloMainAreasArticleArticleControllerArticleBoolInput?: VloMainAreasArticleArticleControllerArticleBoolInput, options?: any) => Promise<RequestArgs>;
    /**
     *
     * @param {VloMainAreasArticleArticleControllerArticleDateInput} [vloMainAreasArticleArticleControllerArticleDateInput]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiArticlesArticleSetPublishDatePut: (vloMainAreasArticleArticleControllerArticleDateInput?: VloMainAreasArticleArticleControllerArticleDateInput, options?: any) => Promise<RequestArgs>;
    /**
     *
     * @param {VloMainAreasArticleArticleControllerArticleTitleInput} [vloMainAreasArticleArticleControllerArticleTitleInput]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiArticlesArticleSetTitlePut: (vloMainAreasArticleArticleControllerArticleTitleInput?: VloMainAreasArticleArticleControllerArticleTitleInput, options?: any) => Promise<RequestArgs>;
};
/**
 * ArticleApi - functional programming interface
 * @export
 */
export declare const ArticleApiFp: (configuration?: Configuration) => {
    /**
     *
     * @param {VloMainAreasArticleUserArticleInput} [vloMainAreasArticleUserArticleInput]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiArticlesArticleAddEditorPut(vloMainAreasArticleUserArticleInput?: VloMainAreasArticleUserArticleInput, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
    /**
     *
     * @param {string} [articleId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiArticlesArticleGetArticleGet(articleId?: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<AccountsDataModelsDataModelsArticle>>;
    /**
     *
     * @param {string} [articleId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiArticlesArticleGetContentGet(articleId?: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
    /**
     *
     * @param {string} [articleId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiArticlesArticleGetPictureGet(articleId?: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
    /**
     *
     * @param {string} [articleId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiArticlesArticleGetTagsGet(articleId?: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Array<AccountsDataModelsDataModelsTag>>>;
    /**
     *
     * @summary Creates a blank article and returns its ID
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiArticlesArticlePost(options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
    /**
     *
     * @param {VloMainAreasArticleArticleUpdateInput} [vloMainAreasArticleArticleUpdateInput]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiArticlesArticlePut(vloMainAreasArticleArticleUpdateInput?: VloMainAreasArticleArticleUpdateInput, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
    /**
     *
     * @param {VloMainAreasArticleUserArticleInput} [vloMainAreasArticleUserArticleInput]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiArticlesArticleRemoveEditorDelete(vloMainAreasArticleUserArticleInput?: VloMainAreasArticleUserArticleInput, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
    /**
     *
     * @param {string} [query]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiArticlesArticleSearchArticlesGet(query?: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
    /**
     *
     * @param {string} articleId
     * @param {any} file
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiArticlesArticleSetPicturePost(articleId: string, file: any, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
    /**
     *
     * @param {VloMainAreasArticleArticleControllerArticleBoolInput} [vloMainAreasArticleArticleControllerArticleBoolInput]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiArticlesArticleSetPublicPut(vloMainAreasArticleArticleControllerArticleBoolInput?: VloMainAreasArticleArticleControllerArticleBoolInput, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
    /**
     *
     * @param {VloMainAreasArticleArticleControllerArticleDateInput} [vloMainAreasArticleArticleControllerArticleDateInput]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiArticlesArticleSetPublishDatePut(vloMainAreasArticleArticleControllerArticleDateInput?: VloMainAreasArticleArticleControllerArticleDateInput, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
    /**
     *
     * @param {VloMainAreasArticleArticleControllerArticleTitleInput} [vloMainAreasArticleArticleControllerArticleTitleInput]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiArticlesArticleSetTitlePut(vloMainAreasArticleArticleControllerArticleTitleInput?: VloMainAreasArticleArticleControllerArticleTitleInput, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
};
/**
 * ArticleApi - factory interface
 * @export
 */
export declare const ArticleApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     *
     * @param {VloMainAreasArticleUserArticleInput} [vloMainAreasArticleUserArticleInput]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiArticlesArticleAddEditorPut(vloMainAreasArticleUserArticleInput?: VloMainAreasArticleUserArticleInput, options?: any): AxiosPromise<void>;
    /**
     *
     * @param {string} [articleId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiArticlesArticleGetArticleGet(articleId?: string, options?: any): AxiosPromise<AccountsDataModelsDataModelsArticle>;
    /**
     *
     * @param {string} [articleId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiArticlesArticleGetContentGet(articleId?: string, options?: any): AxiosPromise<void>;
    /**
     *
     * @param {string} [articleId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiArticlesArticleGetPictureGet(articleId?: string, options?: any): AxiosPromise<void>;
    /**
     *
     * @param {string} [articleId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiArticlesArticleGetTagsGet(articleId?: string, options?: any): AxiosPromise<Array<AccountsDataModelsDataModelsTag>>;
    /**
     *
     * @summary Creates a blank article and returns its ID
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiArticlesArticlePost(options?: any): AxiosPromise<void>;
    /**
     *
     * @param {VloMainAreasArticleArticleUpdateInput} [vloMainAreasArticleArticleUpdateInput]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiArticlesArticlePut(vloMainAreasArticleArticleUpdateInput?: VloMainAreasArticleArticleUpdateInput, options?: any): AxiosPromise<void>;
    /**
     *
     * @param {VloMainAreasArticleUserArticleInput} [vloMainAreasArticleUserArticleInput]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiArticlesArticleRemoveEditorDelete(vloMainAreasArticleUserArticleInput?: VloMainAreasArticleUserArticleInput, options?: any): AxiosPromise<void>;
    /**
     *
     * @param {string} [query]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiArticlesArticleSearchArticlesGet(query?: string, options?: any): AxiosPromise<void>;
    /**
     *
     * @param {string} articleId
     * @param {any} file
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiArticlesArticleSetPicturePost(articleId: string, file: any, options?: any): AxiosPromise<void>;
    /**
     *
     * @param {VloMainAreasArticleArticleControllerArticleBoolInput} [vloMainAreasArticleArticleControllerArticleBoolInput]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiArticlesArticleSetPublicPut(vloMainAreasArticleArticleControllerArticleBoolInput?: VloMainAreasArticleArticleControllerArticleBoolInput, options?: any): AxiosPromise<void>;
    /**
     *
     * @param {VloMainAreasArticleArticleControllerArticleDateInput} [vloMainAreasArticleArticleControllerArticleDateInput]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiArticlesArticleSetPublishDatePut(vloMainAreasArticleArticleControllerArticleDateInput?: VloMainAreasArticleArticleControllerArticleDateInput, options?: any): AxiosPromise<void>;
    /**
     *
     * @param {VloMainAreasArticleArticleControllerArticleTitleInput} [vloMainAreasArticleArticleControllerArticleTitleInput]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiArticlesArticleSetTitlePut(vloMainAreasArticleArticleControllerArticleTitleInput?: VloMainAreasArticleArticleControllerArticleTitleInput, options?: any): AxiosPromise<void>;
};
/**
 * ArticleApi - object-oriented interface
 * @export
 * @class ArticleApi
 * @extends {BaseAPI}
 */
export declare class ArticleApi extends BaseAPI {
    /**
     *
     * @param {VloMainAreasArticleUserArticleInput} [vloMainAreasArticleUserArticleInput]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ArticleApi
     */
    apiArticlesArticleAddEditorPut(vloMainAreasArticleUserArticleInput?: VloMainAreasArticleUserArticleInput, options?: any): Promise<import("axios").AxiosResponse<void, any>>;
    /**
     *
     * @param {string} [articleId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ArticleApi
     */
    apiArticlesArticleGetArticleGet(articleId?: string, options?: any): Promise<import("axios").AxiosResponse<AccountsDataModelsDataModelsArticle, any>>;
    /**
     *
     * @param {string} [articleId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ArticleApi
     */
    apiArticlesArticleGetContentGet(articleId?: string, options?: any): Promise<import("axios").AxiosResponse<void, any>>;
    /**
     *
     * @param {string} [articleId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ArticleApi
     */
    apiArticlesArticleGetPictureGet(articleId?: string, options?: any): Promise<import("axios").AxiosResponse<void, any>>;
    /**
     *
     * @param {string} [articleId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ArticleApi
     */
    apiArticlesArticleGetTagsGet(articleId?: string, options?: any): Promise<import("axios").AxiosResponse<AccountsDataModelsDataModelsTag[], any>>;
    /**
     *
     * @summary Creates a blank article and returns its ID
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ArticleApi
     */
    apiArticlesArticlePost(options?: any): Promise<import("axios").AxiosResponse<void, any>>;
    /**
     *
     * @param {VloMainAreasArticleArticleUpdateInput} [vloMainAreasArticleArticleUpdateInput]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ArticleApi
     */
    apiArticlesArticlePut(vloMainAreasArticleArticleUpdateInput?: VloMainAreasArticleArticleUpdateInput, options?: any): Promise<import("axios").AxiosResponse<void, any>>;
    /**
     *
     * @param {VloMainAreasArticleUserArticleInput} [vloMainAreasArticleUserArticleInput]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ArticleApi
     */
    apiArticlesArticleRemoveEditorDelete(vloMainAreasArticleUserArticleInput?: VloMainAreasArticleUserArticleInput, options?: any): Promise<import("axios").AxiosResponse<void, any>>;
    /**
     *
     * @param {string} [query]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ArticleApi
     */
    apiArticlesArticleSearchArticlesGet(query?: string, options?: any): Promise<import("axios").AxiosResponse<void, any>>;
    /**
     *
     * @param {string} articleId
     * @param {any} file
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ArticleApi
     */
    apiArticlesArticleSetPicturePost(articleId: string, file: any, options?: any): Promise<import("axios").AxiosResponse<void, any>>;
    /**
     *
     * @param {VloMainAreasArticleArticleControllerArticleBoolInput} [vloMainAreasArticleArticleControllerArticleBoolInput]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ArticleApi
     */
    apiArticlesArticleSetPublicPut(vloMainAreasArticleArticleControllerArticleBoolInput?: VloMainAreasArticleArticleControllerArticleBoolInput, options?: any): Promise<import("axios").AxiosResponse<void, any>>;
    /**
     *
     * @param {VloMainAreasArticleArticleControllerArticleDateInput} [vloMainAreasArticleArticleControllerArticleDateInput]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ArticleApi
     */
    apiArticlesArticleSetPublishDatePut(vloMainAreasArticleArticleControllerArticleDateInput?: VloMainAreasArticleArticleControllerArticleDateInput, options?: any): Promise<import("axios").AxiosResponse<void, any>>;
    /**
     *
     * @param {VloMainAreasArticleArticleControllerArticleTitleInput} [vloMainAreasArticleArticleControllerArticleTitleInput]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ArticleApi
     */
    apiArticlesArticleSetTitlePut(vloMainAreasArticleArticleControllerArticleTitleInput?: VloMainAreasArticleArticleControllerArticleTitleInput, options?: any): Promise<import("axios").AxiosResponse<void, any>>;
}
/**
 * FileApi - axios parameter creator
 * @export
 */
export declare const FileApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     *
     * @param {string} [folderId]
     * @param {string} [fileId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiFileManagementFileAddSubFilePost: (folderId?: string, fileId?: string, options?: any) => Promise<RequestArgs>;
    /**
     *
     * @param {string} [parentId]
     * @param {string} [childId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiFileManagementFileAddSubFolderPost: (parentId?: string, childId?: string, options?: any) => Promise<RequestArgs>;
    /**
     *
     * @param {string} [name]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiFileManagementFileCreateFolderPost: (name?: string, options?: any) => Promise<RequestArgs>;
    /**
     *
     * @param {string} [fileId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiFileManagementFileDeleteFileDelete: (fileId?: string, options?: any) => Promise<RequestArgs>;
    /**
     *
     * @param {string} [folderId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiFileManagementFileDeleteFolderDelete: (folderId?: string, options?: any) => Promise<RequestArgs>;
    /**
     *
     * @param {string} [id]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiFileManagementFileGetFileGet: (id?: string, options?: any) => Promise<RequestArgs>;
    /**
     *
     * @param {string} [id]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiFileManagementFileGetFilesInfoGet: (id?: string, options?: any) => Promise<RequestArgs>;
    /**
     *
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiFileManagementFileGetMyArticlesGet: (options?: any) => Promise<RequestArgs>;
    /**
     *
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiFileManagementFileGetUserFoldersFilesGet: (options?: any) => Promise<RequestArgs>;
    /**
     *
     * @param {string} [folderId]
     * @param {string} [fileId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiFileManagementFileRemoveSubFileDelete: (folderId?: string, fileId?: string, options?: any) => Promise<RequestArgs>;
    /**
     *
     * @param {string} [parentId]
     * @param {string} [childId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiFileManagementFileRemoveSubFolderDelete: (parentId?: string, childId?: string, options?: any) => Promise<RequestArgs>;
    /**
     *
     * @param {boolean} [isPublic]
     * @param {any} [file]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiFileManagementFileUploadFilePost: (isPublic?: boolean, file?: any, options?: any) => Promise<RequestArgs>;
};
/**
 * FileApi - functional programming interface
 * @export
 */
export declare const FileApiFp: (configuration?: Configuration) => {
    /**
     *
     * @param {string} [folderId]
     * @param {string} [fileId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiFileManagementFileAddSubFilePost(folderId?: string, fileId?: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
    /**
     *
     * @param {string} [parentId]
     * @param {string} [childId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiFileManagementFileAddSubFolderPost(parentId?: string, childId?: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
    /**
     *
     * @param {string} [name]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiFileManagementFileCreateFolderPost(name?: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
    /**
     *
     * @param {string} [fileId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiFileManagementFileDeleteFileDelete(fileId?: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
    /**
     *
     * @param {string} [folderId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiFileManagementFileDeleteFolderDelete(folderId?: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
    /**
     *
     * @param {string} [id]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiFileManagementFileGetFileGet(id?: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<string>>;
    /**
     *
     * @param {string} [id]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiFileManagementFileGetFilesInfoGet(id?: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<AccountsDataModelsDataModelsFile>>;
    /**
     *
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiFileManagementFileGetMyArticlesGet(options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Array<AccountsDataModelsDataModelsArticle>>>;
    /**
     *
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiFileManagementFileGetUserFoldersFilesGet(options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
    /**
     *
     * @param {string} [folderId]
     * @param {string} [fileId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiFileManagementFileRemoveSubFileDelete(folderId?: string, fileId?: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
    /**
     *
     * @param {string} [parentId]
     * @param {string} [childId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiFileManagementFileRemoveSubFolderDelete(parentId?: string, childId?: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
    /**
     *
     * @param {boolean} [isPublic]
     * @param {any} [file]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiFileManagementFileUploadFilePost(isPublic?: boolean, file?: any, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<string>>;
};
/**
 * FileApi - factory interface
 * @export
 */
export declare const FileApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     *
     * @param {string} [folderId]
     * @param {string} [fileId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiFileManagementFileAddSubFilePost(folderId?: string, fileId?: string, options?: any): AxiosPromise<void>;
    /**
     *
     * @param {string} [parentId]
     * @param {string} [childId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiFileManagementFileAddSubFolderPost(parentId?: string, childId?: string, options?: any): AxiosPromise<void>;
    /**
     *
     * @param {string} [name]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiFileManagementFileCreateFolderPost(name?: string, options?: any): AxiosPromise<void>;
    /**
     *
     * @param {string} [fileId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiFileManagementFileDeleteFileDelete(fileId?: string, options?: any): AxiosPromise<void>;
    /**
     *
     * @param {string} [folderId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiFileManagementFileDeleteFolderDelete(folderId?: string, options?: any): AxiosPromise<void>;
    /**
     *
     * @param {string} [id]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiFileManagementFileGetFileGet(id?: string, options?: any): AxiosPromise<string>;
    /**
     *
     * @param {string} [id]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiFileManagementFileGetFilesInfoGet(id?: string, options?: any): AxiosPromise<AccountsDataModelsDataModelsFile>;
    /**
     *
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiFileManagementFileGetMyArticlesGet(options?: any): AxiosPromise<Array<AccountsDataModelsDataModelsArticle>>;
    /**
     *
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiFileManagementFileGetUserFoldersFilesGet(options?: any): AxiosPromise<void>;
    /**
     *
     * @param {string} [folderId]
     * @param {string} [fileId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiFileManagementFileRemoveSubFileDelete(folderId?: string, fileId?: string, options?: any): AxiosPromise<void>;
    /**
     *
     * @param {string} [parentId]
     * @param {string} [childId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiFileManagementFileRemoveSubFolderDelete(parentId?: string, childId?: string, options?: any): AxiosPromise<void>;
    /**
     *
     * @param {boolean} [isPublic]
     * @param {any} [file]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiFileManagementFileUploadFilePost(isPublic?: boolean, file?: any, options?: any): AxiosPromise<string>;
};
/**
 * FileApi - object-oriented interface
 * @export
 * @class FileApi
 * @extends {BaseAPI}
 */
export declare class FileApi extends BaseAPI {
    /**
     *
     * @param {string} [folderId]
     * @param {string} [fileId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof FileApi
     */
    apiFileManagementFileAddSubFilePost(folderId?: string, fileId?: string, options?: any): Promise<import("axios").AxiosResponse<void, any>>;
    /**
     *
     * @param {string} [parentId]
     * @param {string} [childId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof FileApi
     */
    apiFileManagementFileAddSubFolderPost(parentId?: string, childId?: string, options?: any): Promise<import("axios").AxiosResponse<void, any>>;
    /**
     *
     * @param {string} [name]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof FileApi
     */
    apiFileManagementFileCreateFolderPost(name?: string, options?: any): Promise<import("axios").AxiosResponse<void, any>>;
    /**
     *
     * @param {string} [fileId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof FileApi
     */
    apiFileManagementFileDeleteFileDelete(fileId?: string, options?: any): Promise<import("axios").AxiosResponse<void, any>>;
    /**
     *
     * @param {string} [folderId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof FileApi
     */
    apiFileManagementFileDeleteFolderDelete(folderId?: string, options?: any): Promise<import("axios").AxiosResponse<void, any>>;
    /**
     *
     * @param {string} [id]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof FileApi
     */
    apiFileManagementFileGetFileGet(id?: string, options?: any): Promise<import("axios").AxiosResponse<string, any>>;
    /**
     *
     * @param {string} [id]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof FileApi
     */
    apiFileManagementFileGetFilesInfoGet(id?: string, options?: any): Promise<import("axios").AxiosResponse<AccountsDataModelsDataModelsFile, any>>;
    /**
     *
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof FileApi
     */
    apiFileManagementFileGetMyArticlesGet(options?: any): Promise<import("axios").AxiosResponse<AccountsDataModelsDataModelsArticle[], any>>;
    /**
     *
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof FileApi
     */
    apiFileManagementFileGetUserFoldersFilesGet(options?: any): Promise<import("axios").AxiosResponse<void, any>>;
    /**
     *
     * @param {string} [folderId]
     * @param {string} [fileId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof FileApi
     */
    apiFileManagementFileRemoveSubFileDelete(folderId?: string, fileId?: string, options?: any): Promise<import("axios").AxiosResponse<void, any>>;
    /**
     *
     * @param {string} [parentId]
     * @param {string} [childId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof FileApi
     */
    apiFileManagementFileRemoveSubFolderDelete(parentId?: string, childId?: string, options?: any): Promise<import("axios").AxiosResponse<void, any>>;
    /**
     *
     * @param {boolean} [isPublic]
     * @param {any} [file]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof FileApi
     */
    apiFileManagementFileUploadFilePost(isPublic?: boolean, file?: any, options?: any): Promise<import("axios").AxiosResponse<string, any>>;
}
/**
 * TagApi - axios parameter creator
 * @export
 */
export declare const TagApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     *
     * @param {string} [articleId]
     * @param {string} [tagContent]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiTagsTagAddToArticlePost: (articleId?: string, tagContent?: string, options?: any) => Promise<RequestArgs>;
    /**
     *
     * @param {string} [tagContent]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiTagsTagPost: (tagContent?: string, options?: any) => Promise<RequestArgs>;
    /**
     *
     * @param {string} [articleId]
     * @param {string} [tagContent]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiTagsTagRemoveFromArticleDelete: (articleId?: string, tagContent?: string, options?: any) => Promise<RequestArgs>;
    /**
     *
     * @param {string} [query]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiTagsTagSearchGet: (query?: string, options?: any) => Promise<RequestArgs>;
};
/**
 * TagApi - functional programming interface
 * @export
 */
export declare const TagApiFp: (configuration?: Configuration) => {
    /**
     *
     * @param {string} [articleId]
     * @param {string} [tagContent]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiTagsTagAddToArticlePost(articleId?: string, tagContent?: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
    /**
     *
     * @param {string} [tagContent]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiTagsTagPost(tagContent?: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
    /**
     *
     * @param {string} [articleId]
     * @param {string} [tagContent]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiTagsTagRemoveFromArticleDelete(articleId?: string, tagContent?: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
    /**
     *
     * @param {string} [query]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiTagsTagSearchGet(query?: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
};
/**
 * TagApi - factory interface
 * @export
 */
export declare const TagApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     *
     * @param {string} [articleId]
     * @param {string} [tagContent]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiTagsTagAddToArticlePost(articleId?: string, tagContent?: string, options?: any): AxiosPromise<void>;
    /**
     *
     * @param {string} [tagContent]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiTagsTagPost(tagContent?: string, options?: any): AxiosPromise<void>;
    /**
     *
     * @param {string} [articleId]
     * @param {string} [tagContent]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiTagsTagRemoveFromArticleDelete(articleId?: string, tagContent?: string, options?: any): AxiosPromise<void>;
    /**
     *
     * @param {string} [query]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiTagsTagSearchGet(query?: string, options?: any): AxiosPromise<void>;
};
/**
 * TagApi - object-oriented interface
 * @export
 * @class TagApi
 * @extends {BaseAPI}
 */
export declare class TagApi extends BaseAPI {
    /**
     *
     * @param {string} [articleId]
     * @param {string} [tagContent]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof TagApi
     */
    apiTagsTagAddToArticlePost(articleId?: string, tagContent?: string, options?: any): Promise<import("axios").AxiosResponse<void, any>>;
    /**
     *
     * @param {string} [tagContent]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof TagApi
     */
    apiTagsTagPost(tagContent?: string, options?: any): Promise<import("axios").AxiosResponse<void, any>>;
    /**
     *
     * @param {string} [articleId]
     * @param {string} [tagContent]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof TagApi
     */
    apiTagsTagRemoveFromArticleDelete(articleId?: string, tagContent?: string, options?: any): Promise<import("axios").AxiosResponse<void, any>>;
    /**
     *
     * @param {string} [query]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof TagApi
     */
    apiTagsTagSearchGet(query?: string, options?: any): Promise<import("axios").AxiosResponse<void, any>>;
}
//# sourceMappingURL=api.d.ts.map